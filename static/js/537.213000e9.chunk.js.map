{"version":3,"file":"static/js/537.213000e9.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","redux/filter/filter-selectors.js","components/Filter/Filter.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Contacts/Contacts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport propTypes from 'prop-types';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n  useChangeContactMutation,\n} from 'redux/contacts/contacts-slice';\n\nconst ContactForm = ({\n  btn = 'Add contact',\n  changedName = '',\n  changedNumber = '',\n  changedId = null,\n  closeModal = null,\n}) => {\n  const [name, setName] = useState(changedName);\n  const [number, setNumber] = useState(changedNumber);\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n  const [changeContact, { isLoading: isChanging }] = useChangeContactMutation();\n  const { data } = useFetchContactsQuery();\n  const contacts = data;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' || number === '') {\n      alert(`Please fill all fields`);\n      return;\n    }\n    if (btn === 'Add contact') {\n      if (\n        contacts.some(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      ) {\n        alert(`${name} is already in contacts`);\n        return;\n      }\n      addContact({ name, number });\n    } else {\n      changeContact({ changedId, name, number });\n      closeModal();\n    }\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChangeName = e => {\n    setName(e.target.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.target.value);\n  };\n\n  return (\n    <>\n      <Form className=\"mt-4\" onSubmit={handleSubmit}>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            name=\"name\"\n            value={name}\n            onChange={handleChangeName}\n            type=\"text\"\n            placeholder=\"Enter name\"\n          />\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Number</Form.Label>\n          <Form.Control\n            name=\"number\"\n            value={number}\n            onChange={handleChangeNumber}\n            type=\"tel\"\n            placeholder=\"Enter number\"\n          />\n        </Form.Group>\n        <Button variant=\"primary\" type=\"submit\">\n          {isAdding || isChanging ? 'Procesing...' : `${btn}`}\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nContactForm.propTypes = {\n  changedName: propTypes.string,\n  changedId: propTypes.string,\n  changedNumber: propTypes.string,\n  btn: propTypes.string,\n  closeModal: propTypes.func,\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.filter;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Form } from 'react-bootstrap';\nimport { changeFilter } from 'redux/filter/filter-reducer';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <Form.Group className=\"mb-3 mt-3\">\n      <Form.Label>Find contacts by name</Form.Label>\n      <Form.Control\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))}\n        type=\"text\"\n        placeholder=\"Enter name\"\n      />\n    </Form.Group>\n  );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport ContactForm from 'components/ContactForm';\nimport propTypes from 'prop-types';\n\nimport { useDelContactMutation } from 'redux/contacts';\n\nconst ContactListItem = ({ name, number, id }) => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  const [delContact, { isLoading: isUpdating }] = useDelContactMutation();\n\n  return (\n    <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n      <span>\n        {name}: {number}\n      </span>\n      <div>\n        <Button className=\"btn-sm\" type=\"button\" onClick={handleShow}>\n          Change\n        </Button>\n\n        <span> </span>\n        <Button className=\"btn-sm\" type=\"button\" onClick={() => delContact(id)}>\n          {isUpdating ? 'isDeliting...' : 'Delete'}\n        </Button>\n      </div>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Change contact</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <ContactForm\n            btn=\"Change contact\"\n            changedName={name}\n            changedNumber={number}\n            changedId={id}\n            closeModal={handleClose}\n          />\n        </Modal.Body>\n      </Modal>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  name: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  number: propTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { useFetchContactsQuery } from 'redux/contacts';\nimport ContactsListItem from '../ContactsListItem';\n\nconst ContactsList = () => {\n  const { data, isLoading } = useFetchContactsQuery();\n\n  const filter = useSelector(getFilter);\n  if (data) {\n    const filteredContacts = data.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return isLoading ? (\n      <div className=\"spinner-grow text-primary\" role=\"status\">\n        <span className=\"sr-only\"></span>\n      </div>\n    ) : (\n      <ul className=\"list-group\">\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <ContactsListItem key={id} id={id} name={name} number={number} />\n          );\n        })}\n      </ul>\n    );\n  }\n};\n\nexport default ContactsList;\n","import ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactsList from 'components/ContactsList';\nconst Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <h1 className=\"text-primary\">Contacts</h1>\n      <ContactsList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["btn","changedName","changedNumber","changedId","closeModal","useState","name","setName","number","setNumber","useAddContactMutation","addContact","isAdding","isLoading","useChangeContactMutation","changeContact","isChanging","contacts","useFetchContactsQuery","data","Form","className","onSubmit","e","preventDefault","some","contact","toLowerCase","alert","value","onChange","target","type","placeholder","Button","variant","getFilter","state","filter","useSelector","dispatch","useDispatch","changeFilter","id","show","setShow","handleClose","useDelContactMutation","delContact","isUpdating","onClick","Modal","onHide","closeButton","filteredContacts","includes","role","map","ContactsListItem"],"sourceRoot":""}